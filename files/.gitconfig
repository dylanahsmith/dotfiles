[user]
	name = Dylan Thacker-Smith
[github]
	user = dylanahsmith
[alias]
	dlog = log --pretty=format:'%C(yellow)%h %C(bold cyan)%ci %C(bold green)%an%C(bold red)%d%Creset: %s'
	flog = log --pretty=format:'%C(yellow)%h %C(bold cyan)%cr %C(bold green)%an%C(bold red)%d%Creset: %s'
	plog = log --first-parent --pretty=format:'%C(yellow)%h %C(bold cyan)%cr %C(bold green)%an%C(bold red)%d%Creset: %s'
	llog = log --graph --pretty=format:'%C(yellow)%h %C(bold cyan)%cr %C(bold green)%an%C(bold red)%d%Creset: %s'
	mylog = log --author='Dylan Smith' --pretty=format:'%C(yellow)%h %C(bold cyan)%cr%Creset: %s'
	diffstat = !git diff --stat=$COLUMNS,$COLUMNS
	base = merge-base origin/HEAD HEAD
	diffstatbase = !git diffstat $(git base)
	diffbase = !git diff $(git base)
	plogbase = !git plog $(git base)...
	vimdiffbase = !vim -p "${@:-$(git diffbase --name-only)}" +\"tabdo Gdiff $(git base)\"
	wdiff = diff --word-diff=color
	del-merged = !git branch --merged origin/HEAD | cut -c 3- | grep -xvE 'master|main' | xargs git branch -d
	del-squash-merged = !bash -c 'git checkout -q "$1" && git rebase origin && git checkout -q - && git branch -d "$1"' bash
	lsbranch = !GIT_PAGER=cat git branch --sort=committerdate
	pushf = push --force-with-lease
	pullr = !git pull --rebase "${1:-origin}" "${2:-HEAD}"
	autosquash = rebase -i --autosquash
	releases = tag -l 'v*' --sort=-version:refname
	stash-showp = "!bash -c '{ git stash show --color=always -p stash@{${1:-0}} && git show --color=always -p stash@{${1:-0}}^3; } | less -R' bash"
	checkout-pull = !bash -c 'git fetch origin "pull/$1/head:pull-$1" && git checkout -q "pull-$1"' bash
[merge]
	conflictstyle = diff3
[color]
	ui = auto
[core]
	editor = vim
	excludesfile = ~/.gitignore-global
	commitGraph = true
	precomposeUnicode = true
[format]
	suffix = .diff.txt
[include]
	path = .gitconfig-local
[diff]
	algorithm = patience
[protocol]
	version = 2
[rebase]
	autoStash = true
[pull]
	rebase = true
[commit]
	verbose = true
[stash]
	showPatch = true
[gc]
	writeCommitGraph = true
[init]
	defaultBranch = main
[submodule]
	recurse = true
